import React, { useState } from 'react';
import { HelpPanel } from './HelpPanel';
import './Menu.css';
import { FloorPanel } from '../FloorPanel';

export interface MenuProps {
  className?: string;
  hideFloorsButton?: boolean;
  currentFloorId: string;
  floors: Record<string, any>;
  floorOrder: string[];
  onStateChange: (stateId: string) => void;
  canGoPrevious: () => boolean;
  onShowScoreCard?: () => void;
  isMuted: boolean;
  onToggleMute: () => void;
}

export const Menu: React.FC<MenuProps> = ({ 
  className = '', 
  hideFloorsButton = false,
  currentFloorId,
  floors,
  floorOrder,
  onStateChange,
  canGoPrevious,
  onShowScoreCard,
  isMuted,
  onToggleMute
}) => {
  const [isFloorPanelOpen, setIsFloorPanelOpen] = useState(true);
  const [isHelpActive, setIsHelpActive] = useState(false);


  const setFloorPanel = (isOpen: boolean) => {
    setIsFloorPanelOpen(isOpen);
  };

  const toggleFloorMenu = () => {
    const newState = !isFloorPanelOpen;
    setFloorPanel(newState);
    if (newState && isHelpActive) {
      setIsHelpActive(false);
    }
  };


  const toggleHelp = () => {
    setIsHelpActive(!isHelpActive);

    if (!isHelpActive && isFloorPanelOpen)
      setFloorPanel(false);
  };

  // Note: floorPanel close functionality is handled by the component's own close button


  return (
    <div className={`menu-container ${className}`}>
      <div className="menu-buttons">
        {!hideFloorsButton && (
          <>
            <button
              className={`menu-button ${isFloorPanelOpen ? 'active' : ''}`}
              onClick={toggleFloorMenu}
            >
              <div className="button-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
                  <path d="M16.8375 16.6609L12.8524 5.70312L13.5625 3.75H14.375C14.5408 3.75 14.6998 3.68415 14.817 3.56694C14.9342 3.44973 15 3.29076 15 3.125C15 2.95924 14.9342 2.80027 14.817 2.68306C14.6998 2.56585 14.5408 2.5 14.375 2.5H6.87503C6.70927 2.5 6.5503 2.56585 6.43309 2.68306C6.31588 2.80027 6.25003 2.95924 6.25003 3.125C6.25003 3.29076 6.31588 3.44973 6.43309 3.56694C6.5503 3.68415 6.70927 3.75 6.87503 3.75H7.23284L2.53753 16.6609C2.5094 16.7381 2.49676 16.8201 2.50035 16.9022C2.50394 16.9843 2.52368 17.0649 2.55843 17.1393C2.59319 17.2138 2.64229 17.2806 2.70291 17.3361C2.76354 17.3915 2.8345 17.4345 2.91175 17.4625C2.98017 17.4871 3.05231 17.4998 3.12503 17.5C3.25338 17.5 3.37862 17.4605 3.48373 17.3868C3.58884 17.3132 3.66873 17.2089 3.71253 17.0883L4.4719 15H8.14378L7.53909 16.6609C7.51096 16.7381 7.49833 16.8201 7.50191 16.9022C7.5055 16.9843 7.52524 17.0649 7.56 17.1393C7.59475 17.2138 7.64385 17.2806 7.70448 17.3361C7.7651 17.3915 7.83606 17.4345 7.91331 17.4625C7.98124 17.4869 8.05284 17.4996 8.12503 17.5C8.25338 17.5 8.37862 17.4605 8.48373 17.3868C8.58884 17.3132 8.66873 17.2089 8.71253 17.0883L10.1563 13.125H14.2188L15.6602 17.0883C15.7041 17.2093 15.7844 17.3138 15.8899 17.3875C15.9955 17.4612 16.1213 17.5005 16.25 17.5C16.3227 17.4998 16.3949 17.4871 16.4633 17.4625C16.5406 17.4345 16.6115 17.3915 16.6721 17.3361C16.7328 17.2806 16.7819 17.2138 16.8166 17.1393C16.8514 17.0649 16.8711 16.9843 16.8747 16.9022C16.8783 16.8201 16.8657 16.7381 16.8375 16.6609ZM9.96253 10H6.29065L7.19925 7.5H10.8711L9.96253 10ZM12.2352 3.75L11.3235 6.25H7.65628L8.56253 3.75H12.2352ZM4.92659 13.75L5.83596 11.25H9.50784L8.59378 13.75H4.92659ZM10.6078 11.875L12.1875 7.53203L13.7664 11.875H10.6078Z" fill="#1A1A1A" />
                </svg>
              </div>
              <span className="button-text">Όροφοι</span>
            </button>
            {isFloorPanelOpen && (
              <FloorPanel
                currentFloorId={currentFloorId}
                experienceStates={floors}
                stateOrder={floorOrder}
                onStepReset={() => onStateChange(floorOrder[0])}
                canGoPrevious={canGoPrevious}
                onClose={() => setIsFloorPanelOpen(false)}
                onStateChange={onStateChange}
                onShowScoreCard={onShowScoreCard}
              />
            )}
          </>
        )}

        <button
          className={`menu-button`}
          onClick={onToggleMute}
        >
          <div className="button-icon">
            {isMuted ? (
              // Muted state (no sound waves)
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path d="M12.1492 1.93828C12.0441 1.88706 11.9268 1.86636 11.8105 1.87851C11.6942 1.89066 11.5836 1.93519 11.4914 2.00703L6.03516 6.25H2.5C2.16848 6.25 1.85054 6.38169 1.61612 6.61611C1.3817 6.85053 1.25 7.16848 1.25 7.5V12.5C1.25 12.8315 1.3817 13.1495 1.61612 13.3839C1.85054 13.6183 2.16848 13.75 2.5 13.75H6.03516L11.4914 17.993C11.5837 18.0647 11.6944 18.1092 11.8107 18.1212C11.927 18.1332 12.0444 18.1124 12.1495 18.061C12.2545 18.0097 12.3431 17.9299 12.405 17.8307C12.467 17.7315 12.4999 17.6169 12.5 17.5V2.5C12.5 2.38291 12.4671 2.26817 12.4051 2.16886C12.3431 2.06954 12.2544 1.98965 12.1492 1.93828ZM2.5 7.5H5.625V12.5H2.5V7.5ZM11.25 16.2219L6.875 12.8195V7.18046L11.25 3.77812V16.2219Z" fill="#1A1A1A" />
              </svg>
            ) : (
              // Unmuted state (with sound waves)
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path d="M12.1492 1.93828C12.0441 1.88706 11.9268 1.86636 11.8105 1.87851C11.6942 1.89066 11.5836 1.93519 11.4914 2.00703L6.03516 6.25H2.5C2.16848 6.25 1.85054 6.38169 1.61612 6.61611C1.3817 6.85053 1.25 7.16848 1.25 7.5V12.5C1.25 12.8315 1.3817 13.1495 1.61612 13.3839C1.85054 13.6183 2.16848 13.75 2.5 13.75H6.03516L11.4914 17.993C11.5837 18.0647 11.6944 18.1092 11.8107 18.1212C11.927 18.1332 12.0444 18.1124 12.1495 18.061C12.2545 18.0097 12.3431 17.9299 12.405 17.8307C12.467 17.7315 12.4999 17.6169 12.5 17.5V2.5C12.5 2.38291 12.4671 2.26817 12.4051 2.16886C12.3431 2.06954 12.2544 1.98965 12.1492 1.93828ZM2.5 7.5H5.625V12.5H2.5V7.5ZM11.25 16.2219L6.875 12.8195V7.18046L11.25 3.77812V16.2219ZM15.4688 7.93437C15.9715 8.50505 16.2488 9.23947 16.2488 10C16.2488 10.7605 15.9715 11.4949 15.4688 12.0656C15.3583 12.187 15.2046 12.26 15.0408 12.269C14.877 12.278 14.7162 12.2223 14.5932 12.1138C14.4701 12.0053 14.3947 11.8527 14.3831 11.6891C14.3715 11.5254 14.4247 11.3638 14.5313 11.2391C14.8327 10.8967 14.999 10.4562 14.999 10C14.999 9.54383 14.8327 9.1033 14.5313 8.76093C14.4247 8.63618 14.3715 8.47454 14.3831 8.3109C14.3947 8.14725 14.4701 7.99473 14.5932 7.88623C14.7162 7.77774 14.877 7.72198 15.0408 7.73098C15.2046 7.73999 15.3583 7.81304 15.4688 7.93437ZM19.375 10C19.3759 11.5377 18.8092 13.0215 17.7836 14.1672C17.6723 14.2877 17.518 14.3595 17.3542 14.3673C17.1903 14.375 17.03 14.3181 16.9077 14.2087C16.7855 14.0993 16.7112 13.9462 16.7008 13.7825C16.6905 13.6188 16.7449 13.4575 16.8523 13.3336C17.6722 12.4169 18.1254 11.2302 18.1254 10.0004C18.1254 8.77056 17.6722 7.58387 16.8523 6.66718C16.7961 6.60629 16.7525 6.53481 16.7241 6.45691C16.6957 6.37901 16.6831 6.29623 16.687 6.21341C16.691 6.13059 16.7113 6.04938 16.7469 5.97451C16.7826 5.89964 16.8327 5.8326 16.8945 5.7773C16.9563 5.722 17.0284 5.67955 17.1068 5.65241C17.1851 5.62527 17.2681 5.61399 17.3508 5.61923C17.4336 5.62447 17.5145 5.64612 17.5888 5.68292C17.6631 5.71972 17.7293 5.77094 17.7836 5.83359C18.8095 6.97876 19.3762 8.46251 19.375 10Z" fill="#1A1A1A" />
              </svg>
            )}
          </div>
        </button>

        <button
          className={`menu-button ${isHelpActive ? 'active' : ''}`}
          onClick={toggleHelp}
        >
          <div className="button-icon">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M10.9375 14.0625C10.9375 14.2479 10.8825 14.4292 10.7795 14.5833C10.6765 14.7375 10.5301 14.8577 10.3588 14.9286C10.1875 14.9996 9.99896 15.0182 9.81711 14.982C9.63525 14.9458 9.4682 14.8565 9.33709 14.7254C9.20598 14.5943 9.11669 14.4273 9.08052 14.2454C9.04434 14.0635 9.06291 13.875 9.13387 13.7037C9.20482 13.5324 9.32499 13.386 9.47916 13.283C9.63333 13.18 9.81458 13.125 10 13.125C10.2486 13.125 10.4871 13.2238 10.6629 13.3996C10.8387 13.5754 10.9375 13.8139 10.9375 14.0625ZM10 5.625C8.27657 5.625 6.875 6.88672 6.875 8.4375V8.75C6.875 8.91576 6.94085 9.07473 7.05806 9.19194C7.17527 9.30915 7.33424 9.375 7.5 9.375C7.66576 9.375 7.82474 9.30915 7.94195 9.19194C8.05916 9.07473 8.125 8.91576 8.125 8.75V8.4375C8.125 7.57812 8.96641 6.875 10 6.875C11.0336 6.875 11.875 7.57812 11.875 8.4375C11.875 9.29688 11.0336 10 10 10C9.83424 10 9.67527 10.0658 9.55806 10.1831C9.44085 10.3003 9.375 10.4592 9.375 10.625V11.25C9.375 11.4158 9.44085 11.5747 9.55806 11.6919C9.67527 11.8092 9.83424 11.875 10 11.875C10.1658 11.875 10.3247 11.8092 10.4419 11.6919C10.5592 11.5747 10.625 11.4158 10.625 11.25V11.1938C12.05 10.932 13.125 9.79531 13.125 8.4375C13.125 6.88672 11.7234 5.625 10 5.625ZM18.125 10C18.125 11.607 17.6485 13.1779 16.7557 14.514C15.8629 15.8502 14.594 16.8916 13.1093 17.5065C11.6247 18.1215 9.99099 18.2824 8.4149 17.9689C6.8388 17.6554 5.39106 16.8815 4.25476 15.7452C3.11846 14.6089 2.34463 13.1612 2.03112 11.5851C1.71762 10.009 1.87852 8.37535 2.49348 6.8907C3.10844 5.40605 4.14985 4.1371 5.486 3.24431C6.82214 2.35152 8.39303 1.875 10 1.875C12.1542 1.87727 14.2195 2.73403 15.7427 4.25727C17.266 5.78051 18.1227 7.84581 18.125 10ZM16.875 10C16.875 8.64025 16.4718 7.31104 15.7164 6.18045C14.9609 5.04987 13.8872 4.16868 12.631 3.64833C11.3747 3.12798 9.99238 2.99183 8.65876 3.2571C7.32514 3.52237 6.10013 4.17716 5.13864 5.13864C4.17716 6.10013 3.52238 7.32513 3.2571 8.65875C2.99183 9.99237 3.12798 11.3747 3.64833 12.6309C4.16868 13.8872 5.04987 14.9609 6.18046 15.7164C7.31105 16.4718 8.64026 16.875 10 16.875C11.8227 16.8729 13.5702 16.1479 14.8591 14.8591C16.1479 13.5702 16.8729 11.8227 16.875 10Z" fill="#1A1A1A" />
            </svg>
          </div>
        </button>
      </div>

      {/* Help Panel */}
      <HelpPanel isVisible={isHelpActive} onClose={toggleHelp} />
    </div>
  );
};

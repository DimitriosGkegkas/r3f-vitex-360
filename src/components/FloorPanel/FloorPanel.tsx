import React from 'react';
import { Floor } from '../../config';
import './FloorPanel.css';

interface FloorPanelProps {
  currentFloorId: string;
  experienceStates: Record<string, Floor>;
  stateOrder: string[];
  onStepReset: () => void;
  canGoPrevious: () => boolean;
  onClose?: () => void;
  onStateChange: (stateId: string) => void;
  onShowScoreCard?: () => void;
}

const FloorPanel: React.FC<FloorPanelProps> = ({
  currentFloorId,
  experienceStates,
  stateOrder,
  onStepReset,
  canGoPrevious,
  onClose,
  onStateChange,
  onShowScoreCard
}) => {
  // Calculate current step number for progress
  const currentStepNumber = stateOrder.indexOf(currentFloorId) + 1;
  const totalSteps = stateOrder.length;

  const handleFloorClick = (stateId: string) => {
    onStateChange(stateId);
  };

  return (
    <div className="floors-panel">
      <div className="panel-header">
        <div className="panel-controls">
          <button
            className="control-button"
            onClick={() => onStepReset()}
            disabled={!canGoPrevious()}
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M17.5 10C17.5002 11.9718 16.7239 13.8643 15.3391 15.268C13.9543 16.6717 12.0724 17.4735 10.1008 17.5H10C8.08456 17.5048 6.24085 16.7718 4.85156 15.4531C4.7919 15.3967 4.74394 15.3291 4.71042 15.2541C4.67689 15.1792 4.65846 15.0983 4.65618 15.0162C4.65389 14.9341 4.6678 14.8524 4.6971 14.7757C4.7264 14.699 4.77053 14.6288 4.82695 14.5691C4.88338 14.5095 4.95101 14.4615 5.02597 14.428C5.10093 14.3945 5.18176 14.376 5.26385 14.3738C5.34593 14.3715 5.42767 14.3854 5.50438 14.4147C5.58109 14.444 5.65128 14.4881 5.71094 14.5445C6.60453 15.3873 7.72663 15.948 8.93705 16.1567C10.1475 16.3654 11.3926 16.2128 12.5168 15.718C13.641 15.2232 14.5945 14.4082 15.2582 13.3746C15.9218 12.341 16.2663 11.1348 16.2484 9.90668C16.2305 8.67852 15.8512 7.48285 15.1577 6.46904C14.4642 5.45523 13.4874 4.66822 12.3493 4.20633C11.2112 3.74445 9.96216 3.62816 8.75832 3.87199C7.55447 4.11583 6.44916 4.70898 5.58047 5.57735C5.57409 5.58425 5.5673 5.59077 5.56016 5.59688L3.48359 7.50001H5.625C5.79076 7.50001 5.94973 7.56585 6.06694 7.68306C6.18415 7.80027 6.25 7.95924 6.25 8.12501C6.25 8.29077 6.18415 8.44974 6.06694 8.56695C5.94973 8.68416 5.79076 8.75001 5.625 8.75001H1.875C1.70924 8.75001 1.55027 8.68416 1.43306 8.56695C1.31585 8.44974 1.25 8.29077 1.25 8.12501V4.375C1.25 4.20924 1.31585 4.05027 1.43306 3.93306C1.55027 3.81585 1.70924 3.75 1.875 3.75C2.04076 3.75 2.19973 3.81585 2.31694 3.93306C2.43415 4.05027 2.5 4.20924 2.5 4.375V6.70313L4.70703 4.6875C5.75702 3.6416 7.09333 2.93021 8.54729 2.64315C10.0012 2.35609 11.5077 2.50623 12.8764 3.0746C14.2451 3.64298 15.4147 4.60412 16.2376 5.83668C17.0605 7.06925 17.4998 8.51798 17.5 10Z" fill="#4D4D4D" />
            </svg>
          </button>
          <div className="progress-bar">
            <div
              className="progress-fill"
              style={{ width: `${(currentStepNumber / totalSteps) * 100}%` }}
            ></div>
          </div>
          <button className="close-button" onClick={onClose}>
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M16.0673 15.1828C16.1254 15.2409 16.1714 15.3098 16.2028 15.3857C16.2343 15.4616 16.2505 15.5429 16.2505 15.625C16.2505 15.7071 16.2343 15.7884 16.2028 15.8643C16.1714 15.9402 16.1254 16.0091 16.0673 16.0672C16.0092 16.1253 15.9403 16.1713 15.8644 16.2027C15.7885 16.2342 15.7072 16.2503 15.6251 16.2503C15.543 16.2503 15.4617 16.2342 15.3858 16.2027C15.3099 16.1713 15.241 16.1253 15.1829 16.0672L10.0001 10.8836L4.81729 16.0672C4.70002 16.1845 4.54096 16.2503 4.3751 16.2503C4.20925 16.2503 4.05019 16.1845 3.93292 16.0672C3.81564 15.9499 3.74976 15.7908 3.74976 15.625C3.74976 15.4591 3.81564 15.3001 3.93292 15.1828L9.11651 10L3.93292 4.81718C3.81564 4.69991 3.74976 4.54085 3.74976 4.375C3.74976 4.20914 3.81564 4.05008 3.93292 3.93281C4.05019 3.81553 4.20925 3.74965 4.3751 3.74965C4.54096 3.74965 4.70002 3.81553 4.81729 3.93281L10.0001 9.1164L15.1829 3.93281C15.3002 3.81553 15.4593 3.74965 15.6251 3.74965C15.791 3.74965 15.95 3.81553 16.0673 3.93281C16.1846 4.05008 16.2505 4.20914 16.2505 4.375C16.2505 4.54085 16.1846 4.69991 16.0673 4.81718L10.8837 10L16.0673 15.1828Z" fill="#4D4D4D" />
            </svg>
          </button>
        </div>

        <div className="panel-title">Όροφοι</div>
        <div className="floors-list">
          {stateOrder.map((stateId, index) => {
            const floor = experienceStates[stateId];
            const isActive = index == stateOrder.indexOf(currentFloorId);

            return (
              <div
                key={stateId}
                className={`floor-item ${isActive ? 'active' : ''}`}
                onClick={() => handleFloorClick(stateId)}
                style={{ cursor: 'pointer' }}
              >
                <>
                  <div className="floor-number">{floor.floorNumber}</div>
                  <div className="floor-name">{floor.title}</div>
                  {isActive && (
                    <div className="you-are-here-marker">
                      <img 
                        src="/you-are-here.png" 
                        alt="You are here" 
                        className="you-are-here-icon"
                      />
                    </div>
                  )}
                </>

              </div>
            );
          })}

          <div
            onClick={onShowScoreCard}
            className='floor-item '
            title="View Score Card"
          >
            <div style={{ width: 24, height: 24, position: 'relative', overflow: 'hidden' }}>
              <svg width="23" height="22" viewBox="0 0 23 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" clip-rule="evenodd" d="M14.9255 7.40489C15.6486 8.3657 15.6522 9.70931 15.9395 9.79217C16.1164 9.8436 16.5011 9.61887 17.2352 9.1237C18.8582 8.02671 19.3998 10.6378 20.1401 11.4453C21.4723 12.8984 21.7294 10.792 20.9872 8.91122C20.3279 7.24003 18.9356 5.65635 17.3035 4.47672C15.5574 3.21404 12.6341 1.86468 10.528 2.76935C10.29 2.87219 11.4498 3.88157 12.0488 4.40912C13.0236 5.26804 14.1925 6.2984 14.9255 7.40489ZM18.5982 7.7239C18.2517 7.46584 18.6712 6.685 19.2775 7.53249C19.8665 8.35523 19.0167 8.57044 18.8909 8.12574C18.8444 7.95529 18.7414 7.82862 18.5982 7.7239ZM16.7855 6.37553C16.8092 5.95653 17.4192 5.99463 17.3946 6.41267C17.2825 8.38095 16.1609 7.65058 16.5667 7.1878C16.7181 7.01544 16.77 6.64978 16.7855 6.37553ZM13.699 4.44437C13.2978 4.45866 13.2759 3.8235 13.6771 3.80827C14.1266 3.79113 15.4478 3.99776 15.1424 4.56626C14.9035 5.0119 14.6345 4.40724 13.699 4.44437ZM13.5841 20.025C11.6602 20.5106 8.63296 19.4831 6.73196 18.3376C4.83084 17.1911 2.49929 15.1066 1.89846 12.9755L1.65591 13.4145C1.42614 13.8325 1.83736 14.801 2.72364 15.9217C4.66397 18.3746 8.00857 20.3601 10.9948 20.7923C12.2184 20.9695 13.133 20.8523 13.3435 20.461L13.5841 20.025ZM2.44817 11.9804L3.72563 9.67026C5.93038 11.3881 9.79837 11.2177 12.49 10.3835C12.5748 10.5063 12.6851 10.613 12.8191 10.6939C14.0127 11.4129 15.0586 9.51885 13.8659 8.79991C13.1228 8.36378 12.2721 8.95227 12.2949 9.77977C9.79372 10.553 6.04355 10.7473 4.03377 9.11509L7.81313 2.2799C8.50976 3.94252 11.1156 5.89459 12.983 7.02107L13.7681 7.47529L14.4802 7.85334C14.7091 8.21329 14.8805 8.57705 14.9671 8.93699C15.4029 10.7586 15.8415 10.8253 17.5667 9.65878C18.1758 9.24741 18.5706 9.97015 18.8542 10.4949L14.1355 19.027C13.8793 19.4431 12.962 19.6078 11.7175 19.465C10.368 19.3107 8.67833 18.7756 7.03177 17.7824C5.4908 16.853 4.26453 15.6913 3.45572 14.6104C2.59953 13.4668 2.21384 12.4556 2.44817 11.9804ZM19.1991 11.1434L13.8714 20.78C13.5259 21.4028 12.3843 21.6361 10.9107 21.4228C7.77326 20.9686 4.28825 18.9022 2.2521 16.3274C1.20351 15.0019 0.760384 13.7334 1.12693 13.0945L3.25601 9.24066C1.54546 7.39331 2.77366 5.14232 4.56628 3.76719C5.27292 3.22536 6.11999 2.75304 7.05107 2.37692L7.7723 1.07329C8.09326 0.50576 8.96131 0.37339 10.1448 0.615263C11.2399 0.839992 12.6459 1.37801 14.1413 2.17218C15.3248 2.52736 16.5401 3.15013 17.6489 3.95097C19.8746 5.56028 22.0702 8.22361 21.9983 11.026C21.9481 12.9343 20.3133 13.1669 19.1991 11.1434ZM11.9429 1.84291C11.353 1.85529 10.7967 1.96289 10.2943 2.17905C9.01507 2.72945 10.8104 4.15211 11.6529 4.89494C12.2228 5.39678 12.8611 5.9586 13.4273 6.5509C13.3799 6.52329 13.3334 6.49472 13.2878 6.4671C11.6256 5.46439 10.2342 4.35884 9.32873 3.38289C6.41561 0.242348 10.0573 1.08777 11.9429 1.84291ZM12.9422 9.55886C13.0507 9.30365 13.3562 9.22462 13.5413 9.33889C14.0628 9.66075 13.6389 10.4007 13.1519 10.1578C13.3726 10.0759 13.782 9.97976 13.6516 9.62267C13.5221 9.26654 13.162 9.47792 12.9422 9.55886ZM3.57706 8.66279L6.5441 3.29586C5.08247 4.00814 3.15223 5.41555 3.05909 7.14188C3.029 7.70656 3.22691 8.23238 3.57706 8.66279Z" fill="#1088F4" />
                <path d="M13.5841 20.025C11.6602 20.5106 8.63296 19.4831 6.73196 18.3376C4.83084 17.1911 2.49929 15.1066 1.89846 12.9755L1.65591 13.4145C1.42614 13.8325 1.83736 14.801 2.72364 15.9217C4.66397 18.3746 8.00857 20.3601 10.9948 20.7923C12.2184 20.9695 13.133 20.8523 13.3435 20.461L13.5841 20.025Z" fill="#1088F4" />
                <path fill-rule="evenodd" clip-rule="evenodd" d="M14.9255 7.40489C15.6486 8.3657 15.6522 9.70931 15.9395 9.79217C16.1164 9.8436 16.5011 9.61887 17.2352 9.1237C18.8582 8.02671 19.3998 10.6378 20.1401 11.4453C21.4723 12.8984 21.7294 10.792 20.9872 8.91122C20.3279 7.24003 18.9356 5.65635 17.3035 4.47672C15.5574 3.21404 12.6341 1.86468 10.528 2.76935C10.29 2.87219 11.4498 3.88157 12.0488 4.40912C13.0236 5.26804 14.1925 6.2984 14.9255 7.40489ZM18.5982 7.7239C18.2517 7.46584 18.6712 6.685 19.2775 7.53249C19.8665 8.35523 19.0167 8.57044 18.8909 8.12574C18.8444 7.95529 18.7414 7.82862 18.5982 7.7239ZM16.7855 6.37553C16.8092 5.95653 17.4192 5.99463 17.3946 6.41267C17.2825 8.38095 16.1609 7.65058 16.5667 7.1878C16.7181 7.01544 16.77 6.64978 16.7855 6.37553ZM13.699 4.44437C13.2978 4.45866 13.2759 3.8235 13.6771 3.80827C14.1266 3.79113 15.4478 3.99776 15.1424 4.56626C14.9035 5.0119 14.6345 4.40724 13.699 4.44437ZM13.5841 20.025C11.6602 20.5106 8.63296 19.4831 6.73196 18.3376C4.83084 17.1911 2.49929 15.1066 1.89846 12.9755L1.65591 13.4145C1.42614 13.8325 1.83736 14.801 2.72364 15.9217C4.66397 18.3746 8.00857 20.3601 10.9948 20.7923C12.2184 20.9695 13.133 20.8523 13.3435 20.461L13.5841 20.025ZM2.44817 11.9804L3.72563 9.67026C5.93038 11.3881 9.79837 11.2177 12.49 10.3835C12.5748 10.5063 12.6851 10.613 12.8191 10.6939C14.0127 11.4129 15.0586 9.51885 13.8659 8.79991C13.1228 8.36378 12.2721 8.95227 12.2949 9.77977C9.79372 10.553 6.04355 10.7473 4.03377 9.11509L7.81313 2.2799C8.50976 3.94252 11.1156 5.89459 12.983 7.02107L13.7681 7.47529L14.4802 7.85334C14.7091 8.21329 14.8805 8.57705 14.9671 8.93699C15.4029 10.7586 15.8415 10.8253 17.5667 9.65878C18.1758 9.24741 18.5706 9.97015 18.8542 10.4949L14.1355 19.027C13.8793 19.4431 12.962 19.6078 11.7175 19.465C10.368 19.3107 8.67833 18.7756 7.03177 17.7824C5.4908 16.853 4.26453 15.6913 3.45572 14.6104C2.59953 13.4668 2.21384 12.4556 2.44817 11.9804ZM19.1991 11.1434L13.8714 20.78C13.5259 21.4028 12.3843 21.6361 10.9107 21.4228C7.77326 20.9686 4.28825 18.9022 2.2521 16.3274C1.20351 15.0019 0.760384 13.7334 1.12693 13.0945L3.25601 9.24066C1.54546 7.39331 2.77366 5.14232 4.56628 3.76719C5.27292 3.22536 6.11999 2.75304 7.05107 2.37692L7.7723 1.07329C8.09326 0.50576 8.96131 0.37339 10.1448 0.615263C11.2399 0.839992 12.6459 1.37801 14.1413 2.17218C15.3248 2.52736 16.5401 3.15013 17.6489 3.95097C19.8746 5.56028 22.0702 8.22361 21.9983 11.026C21.9481 12.9343 20.3133 13.1669 19.1991 11.1434ZM11.9429 1.84291C11.353 1.85529 10.7967 1.96289 10.2943 2.17905C9.01507 2.72945 10.8104 4.15211 11.6529 4.89494C12.2228 5.39678 12.8611 5.9586 13.4273 6.5509C13.3799 6.52329 13.3334 6.49472 13.2878 6.4671C11.6256 5.46439 10.2342 4.35884 9.32873 3.38289C6.41561 0.242348 10.0573 1.08777 11.9429 1.84291ZM12.9422 9.55886C13.0507 9.30365 13.3562 9.22462 13.5413 9.33889C14.0628 9.66075 13.6389 10.4007 13.1519 10.1578C13.3726 10.0759 13.782 9.97976 13.6516 9.62267C13.5221 9.26654 13.162 9.47792 12.9422 9.55886ZM3.57706 8.66279L6.5441 3.29586C5.08247 4.00814 3.15223 5.41555 3.05909 7.14188C3.029 7.70656 3.22691 8.23238 3.57706 8.66279Z" stroke="#1088F4" stroke-width="0.75" />
                <path d="M13.5841 20.025C11.6602 20.5106 8.63296 19.4831 6.73196 18.3376C4.83084 17.1911 2.49929 15.1066 1.89846 12.9755L1.65591 13.4145C1.42614 13.8325 1.83736 14.801 2.72364 15.9217C4.66397 18.3746 8.00857 20.3601 10.9948 20.7923C12.2184 20.9695 13.133 20.8523 13.3435 20.461L13.5841 20.025Z" stroke="#1088F4" stroke-width="0.75" />
              </svg>
            </div>
          </div>
        </div>



      </div>
    </div>
  );
};

export default FloorPanel;

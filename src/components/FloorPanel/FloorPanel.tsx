import React from 'react';
import { ExperienceState } from '../../config/experienceStates';
import './FloorPanel.css';

interface FloorPanelProps {
  currentStateId: string;
  experienceStates: Record<string, ExperienceState>;
  stateOrder: string[];
  onStepChange: (direction: 'next' | 'prev') => void;
  canGoPrevious: () => boolean;
  onClose?: () => void;
}

const FloorPanel: React.FC<FloorPanelProps> = ({
  currentStateId,
  experienceStates,
  stateOrder,
  onStepChange,
  canGoPrevious,
  onClose
}) => {
  // Calculate current step number for progress
  const currentStepNumber = stateOrder.indexOf(currentStateId) + 1;
  const totalSteps = stateOrder.length;

  return (
    <div className="floors-panel">
      <div className="panel-header">
        <div className="panel-controls">
          <button
            className="control-button"
            onClick={() => onStepChange('prev')}
            disabled={!canGoPrevious()}
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M17.5 10C17.5002 11.9718 16.7239 13.8643 15.3391 15.268C13.9543 16.6717 12.0724 17.4735 10.1008 17.5H10C8.08456 17.5048 6.24085 16.7718 4.85156 15.4531C4.7919 15.3967 4.74394 15.3291 4.71042 15.2541C4.67689 15.1792 4.65846 15.0983 4.65618 15.0162C4.65389 14.9341 4.6678 14.8524 4.6971 14.7757C4.7264 14.699 4.77053 14.6288 4.82695 14.5691C4.88338 14.5095 4.95101 14.4615 5.02597 14.428C5.10093 14.3945 5.18176 14.376 5.26385 14.3738C5.34593 14.3715 5.42767 14.3854 5.50438 14.4147C5.58109 14.444 5.65128 14.4881 5.71094 14.5445C6.60453 15.3873 7.72663 15.948 8.93705 16.1567C10.1475 16.3654 11.3926 16.2128 12.5168 15.718C13.641 15.2232 14.5945 14.4082 15.2582 13.3746C15.9218 12.341 16.2663 11.1348 16.2484 9.90668C16.2305 8.67852 15.8512 7.48285 15.1577 6.46904C14.4642 5.45523 13.4874 4.66822 12.3493 4.20633C11.2112 3.74445 9.96216 3.62816 8.75832 3.87199C7.55447 4.11583 6.44916 4.70898 5.58047 5.57735C5.57409 5.58425 5.5673 5.59077 5.56016 5.59688L3.48359 7.50001H5.625C5.79076 7.50001 5.94973 7.56585 6.06694 7.68306C6.18415 7.80027 6.25 7.95924 6.25 8.12501C6.25 8.29077 6.18415 8.44974 6.06694 8.56695C5.94973 8.68416 5.79076 8.75001 5.625 8.75001H1.875C1.70924 8.75001 1.55027 8.68416 1.43306 8.56695C1.31585 8.44974 1.25 8.29077 1.25 8.12501V4.375C1.25 4.20924 1.31585 4.05027 1.43306 3.93306C1.55027 3.81585 1.70924 3.75 1.875 3.75C2.04076 3.75 2.19973 3.81585 2.31694 3.93306C2.43415 4.05027 2.5 4.20924 2.5 4.375V6.70313L4.70703 4.6875C5.75702 3.6416 7.09333 2.93021 8.54729 2.64315C10.0012 2.35609 11.5077 2.50623 12.8764 3.0746C14.2451 3.64298 15.4147 4.60412 16.2376 5.83668C17.0605 7.06925 17.4998 8.51798 17.5 10Z" fill="#4D4D4D" />
            </svg>
          </button>
          <div className="progress-bar">
            <div
              className="progress-fill"
              style={{ width: `${(currentStepNumber / totalSteps) * 100}%` }}
            ></div>
          </div>
          <button className="close-button" onClick={onClose}>
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M16.0673 15.1828C16.1254 15.2409 16.1714 15.3098 16.2028 15.3857C16.2343 15.4616 16.2505 15.5429 16.2505 15.625C16.2505 15.7071 16.2343 15.7884 16.2028 15.8643C16.1714 15.9402 16.1254 16.0091 16.0673 16.0672C16.0092 16.1253 15.9403 16.1713 15.8644 16.2027C15.7885 16.2342 15.7072 16.2503 15.6251 16.2503C15.543 16.2503 15.4617 16.2342 15.3858 16.2027C15.3099 16.1713 15.241 16.1253 15.1829 16.0672L10.0001 10.8836L4.81729 16.0672C4.70002 16.1845 4.54096 16.2503 4.3751 16.2503C4.20925 16.2503 4.05019 16.1845 3.93292 16.0672C3.81564 15.9499 3.74976 15.7908 3.74976 15.625C3.74976 15.4591 3.81564 15.3001 3.93292 15.1828L9.11651 10L3.93292 4.81718C3.81564 4.69991 3.74976 4.54085 3.74976 4.375C3.74976 4.20914 3.81564 4.05008 3.93292 3.93281C4.05019 3.81553 4.20925 3.74965 4.3751 3.74965C4.54096 3.74965 4.70002 3.81553 4.81729 3.93281L10.0001 9.1164L15.1829 3.93281C15.3002 3.81553 15.4593 3.74965 15.6251 3.74965C15.791 3.74965 15.95 3.81553 16.0673 3.93281C16.1846 4.05008 16.2505 4.20914 16.2505 4.375C16.2505 4.54085 16.1846 4.69991 16.0673 4.81718L10.8837 10L16.0673 15.1828Z" fill="#4D4D4D" />
            </svg>
          </button>
        </div>

        <div className="panel-title">Όροφοι</div>
        <div className="floors-list">
          {stateOrder.map((stateId, index) => {
            const state = experienceStates[stateId];
            const isCompleted = index < stateOrder.indexOf(currentStateId);

            return (
              <div
                key={stateId}
                className="floor-item"
              >
                {isCompleted ? (
                  <div className="floor-icon"></div>
                ) : (
                  <>
                    <div className="floor-number">{state.floor}</div>
                    <div className="floor-name">{state.title}</div>
                  </>
                )}
              </div>
            );
          })}
          <div
            className="floor-item"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="24" viewBox="0 0 25 24" fill="none">
              <path fillRule="evenodd" clipRule="evenodd" d="M15.9255 8.40489C16.6486 9.3657 16.6522 10.7093 16.9395 10.7922C17.1164 10.8436 17.5011 10.6189 18.2352 10.1237C19.8582 9.02671 20.3998 11.6378 21.1401 12.4453C22.4723 13.8984 22.7294 11.792 21.9872 9.91122C21.3279 8.24003 19.9356 6.65635 18.3035 5.47672C16.5574 4.21404 13.6341 2.86468 11.528 3.76935C11.29 3.87219 12.4498 4.88157 13.0488 5.40912C14.0236 6.26804 15.1925 7.2984 15.9255 8.40489ZM19.5982 8.7239C19.2517 8.46584 19.6712 7.685 20.2775 8.53249C20.8665 9.35523 20.0167 9.57044 19.8909 9.12574C19.8444 8.95529 19.7414 8.82862 19.5982 8.7239ZM17.7855 7.37553C17.8092 6.95653 18.4192 6.99463 18.3946 7.41267C18.2825 9.38095 17.1609 8.65058 17.5667 8.1878C17.7181 8.01544 17.77 7.64978 17.7855 7.37553ZM14.699 5.44437C14.2978 5.45866 14.2759 4.8235 14.6771 4.80827C15.1266 4.79113 16.4478 4.99776 16.1424 5.56626C15.9035 6.0119 15.6345 5.40724 14.699 5.44437ZM14.5841 21.025C12.6602 21.5106 9.63296 20.4831 7.73196 19.3376C5.83084 18.1911 3.49929 16.1066 2.89846 13.9755L2.65591 14.4145C2.42614 14.8325 2.83736 15.801 3.72364 16.9217C5.66397 19.3746 9.00857 21.3601 11.9948 21.7923C13.2184 21.9695 14.133 21.8523 14.3435 21.461L14.5841 21.025ZM3.44817 12.9804L4.72563 10.6703C6.93038 12.3881 10.7984 12.2177 13.49 11.3835C13.5748 11.5063 13.6851 11.613 13.8191 11.6939C15.0127 12.4129 16.0586 10.5189 14.8659 9.79991C14.1228 9.36378 13.2721 9.95227 13.2949 10.7798C10.7937 11.553 7.04355 11.7473 5.03377 10.1151L8.81313 3.2799C9.50976 4.94252 12.1156 6.89459 13.983 8.02107L14.7681 8.47529L15.4802 8.85334C15.7091 9.21329 15.8805 9.57705 15.9671 9.93699C16.4029 11.7586 16.8415 11.8253 18.5667 10.6588C19.1758 10.2474 19.5706 10.9702 19.8542 11.4949L15.1355 20.027C14.8793 20.4431 13.962 20.6078 12.7175 20.465C11.368 20.3107 9.67833 19.7756 8.03177 18.7824C6.4908 17.853 5.26453 16.6913 4.45572 15.6104C3.59953 14.4668 3.21384 13.4556 3.44817 12.9804ZM20.1991 12.1434L14.8714 21.78C14.5259 22.4028 13.3843 22.6361 11.9107 22.4228C8.77326 21.9686 5.28825 19.9022 3.2521 17.3274C2.20351 16.0019 1.76038 14.7334 2.12693 14.0945L4.25601 10.2407C2.54546 8.39331 3.77366 6.14232 5.56628 4.76719C6.27292 4.22536 7.11999 3.75304 8.05107 3.37692L8.7723 2.07329C9.09326 1.50576 9.96131 1.37339 11.1448 1.61526C12.2399 1.83999 13.6459 2.37801 15.1413 3.17218C16.3248 3.52736 17.5401 4.15013 18.6489 4.95097C20.8746 6.56028 23.0702 9.22361 22.9983 12.026C22.9481 13.9343 21.3133 14.1669 20.1991 12.1434ZM12.9429 2.84291C12.353 2.85529 11.7967 2.96289 11.2943 3.17905C10.0151 3.72945 11.8104 5.15211 12.6529 5.89494C13.2228 6.39678 13.8611 6.9586 14.4273 7.5509C14.3799 7.52329 14.3334 7.49472 14.2878 7.4671C12.6256 6.46439 11.2342 5.35884 10.3287 4.38289C7.41561 1.24235 11.0573 2.08777 12.9429 2.84291ZM13.9422 10.5589C14.0507 10.3036 14.3562 10.2246 14.5413 10.3389C15.0628 10.6607 14.6389 11.4007 14.1519 11.1578C14.3726 11.0759 14.782 10.9798 14.6516 10.6227C14.5221 10.2665 14.162 10.4779 13.9422 10.5589ZM4.57706 9.66279L7.5441 4.29586C6.08247 5.00814 4.15223 6.41555 4.05909 8.14188C4.029 8.70656 4.22691 9.23238 4.57706 9.66279Z" fill="#1088F4" />
              <path d="M14.5841 21.025C12.6602 21.5106 9.63296 20.4831 7.73196 19.3376C5.83084 18.1911 3.49929 16.1066 2.89846 13.9755L2.65591 14.4145C2.42614 14.8325 2.83736 15.801 3.72364 16.9217C5.66397 19.3746 9.00857 21.3601 11.9948 21.7923C13.2184 21.9695 14.133 21.8523 14.3435 21.461L14.5841 21.025Z" fill="#1088F4" />
              <path fillRule="evenodd" clipRule="evenodd" d="M15.9255 8.40489C16.6486 9.3657 16.6522 10.7093 16.9395 10.7922C17.1164 10.8436 17.5011 10.6189 18.2352 10.1237C19.8582 9.02671 20.3998 11.6378 21.1401 12.4453C22.4723 13.8984 22.7294 11.792 21.9872 9.91122C21.3279 8.24003 19.9356 6.65635 18.3035 5.47672C16.5574 4.21404 13.6341 2.86468 11.528 3.76935C11.29 3.87219 12.4498 4.88157 13.0488 5.40912C14.0236 6.26804 15.1925 7.2984 15.9255 8.40489ZM19.5982 8.7239C19.2517 8.46584 19.6712 7.685 20.2775 8.53249C20.8665 9.35523 20.0167 9.57044 19.8909 9.12574C19.8444 8.95529 19.7414 8.82862 19.5982 8.7239ZM17.7855 7.37553C17.8092 6.95653 18.4192 6.99463 18.3946 7.41267C18.2825 9.38095 17.1609 8.65058 17.5667 8.1878C17.7181 8.01544 17.77 7.64978 17.7855 7.37553ZM14.699 5.44437C14.2978 5.45866 14.2759 4.8235 14.6771 4.80827C15.1266 4.79113 16.4478 4.99776 16.1424 5.56626C15.9035 6.0119 15.6345 5.40724 14.699 5.44437ZM14.5841 21.025C12.6602 21.5106 9.63296 20.4831 7.73196 19.3376C5.83084 18.1911 3.49929 16.1066 2.89846 13.9755L2.65591 14.4145C2.42614 14.8325 2.83736 15.801 3.72364 16.9217C5.66397 19.3746 9.00857 21.3601 11.9948 21.7923C13.2184 21.9695 14.133 21.8523 14.3435 21.461L14.5841 21.025ZM3.44817 12.9804L4.72563 10.6703C6.93038 12.3881 10.7984 12.2177 13.49 11.3835C13.5748 11.5063 13.6851 11.613 13.8191 11.6939C15.0127 12.4129 16.0586 10.5189 14.8659 9.79991C14.1228 9.36378 13.2721 9.95227 13.2949 10.7798C10.7937 11.553 7.04355 11.7473 5.03377 10.1151L8.81313 3.2799C9.50976 4.94252 12.1156 6.89459 13.983 8.02107L14.7681 8.47529L15.4802 8.85334C15.7091 9.21329 15.8805 9.57705 15.9671 9.93699C16.4029 11.7586 16.8415 11.8253 18.5667 10.6588C19.1758 10.2474 19.5706 10.9702 19.8542 11.4949L15.1355 20.027C14.8793 20.4431 13.962 20.6078 12.7175 20.465C11.368 20.3107 9.67833 19.7756 8.03177 18.7824C6.4908 17.853 5.26453 16.6913 4.45572 15.6104C3.59953 14.4668 3.21384 13.4556 3.44817 12.9804ZM20.1991 12.1434L14.8714 21.78C14.5259 22.4028 13.3843 22.6361 11.9107 22.4228C8.77326 21.9686 5.28825 19.9022 3.2521 17.3274C2.20351 16.0019 1.76038 14.7334 2.12693 14.0945L4.25601 10.2407C2.54546 8.39331 3.77366 6.14232 5.56628 4.76719C6.27292 4.22536 7.11999 3.75304 8.05107 3.37692L8.7723 2.07329C9.09326 1.50576 9.96131 1.37339 11.1448 1.61526C12.2399 1.83999 13.6459 2.37801 15.1413 3.17218C16.3248 3.52736 17.5401 4.15013 18.6489 4.95097C20.8746 6.56028 23.0702 9.22361 22.9983 12.026C22.9481 13.9343 21.3133 14.1669 20.1991 12.1434ZM12.9429 2.84291C12.353 2.85529 11.7967 2.96289 11.2943 3.17905C10.0151 3.72945 11.8104 5.15211 12.6529 5.89494C13.2228 6.39678 13.8611 6.9586 14.4273 7.5509C14.3799 7.52329 14.3334 7.49472 14.2878 7.4671C12.6256 6.46439 11.2342 5.35884 10.3287 4.38289C7.41561 1.24235 11.0573 2.08777 12.9429 2.84291ZM13.9422 10.5589C14.0507 10.3036 14.3562 10.2246 14.5413 10.3389C15.0628 10.6607 14.6389 11.4007 14.1519 11.1578C14.3726 11.0759 14.782 10.9798 14.6516 10.6227C14.5221 10.2665 14.162 10.4779 13.9422 10.5589ZM4.57706 9.66279L7.5441 4.29586C6.08247 5.00814 4.15223 6.41555 4.05909 8.14188C4.029 8.70656 4.22691 9.23238 4.57706 9.66279Z" stroke="#1088F4" strokeWidth="0.75" />
              <path d="M14.5841 21.025C12.6602 21.5106 9.63296 20.4831 7.73196 19.3376C5.83084 18.1911 3.49929 16.1066 2.89846 13.9755L2.65591 14.4145C2.42614 14.8325 2.83736 15.801 3.72364 16.9217C5.66397 19.3746 9.00857 21.3601 11.9948 21.7923C13.2184 21.9695 14.133 21.8523 14.3435 21.461L14.5841 21.025Z" stroke="#1088F4" strokeWidth="0.75" />
            </svg>
          </div>
        </div>


      </div>
    </div>
  );
};

export default FloorPanel;
